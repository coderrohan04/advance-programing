////**********//////////////***************************////////////reverse the order of array

import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.regex.*;
public class Solution {
    public static void main(String[] args) throws IOException {
        Scanner sc= new Scanner(System.in);
        int size=sc.nextInt();
        int a[]=new int[size];
        for (int i = 0; i < size; i++) {
            a[i]=sc.nextInt();
        }
        for (int i = size-1; i >= 0; i--) {
            System.out.print(a[i] + " ");
        }
    }
}
////**********//////////////***************************////////////sum of array////**********//////////////***************************////////////
import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.regex.*;

class Result {

    /*
     * Complete the 'simpleArraySum' function below.
     *
     * The function is expected to return an INTEGER.
     * The function accepts INTEGER_ARRAY ar as parameter.
     */
}

//edit by aryan vats

public class Solution {
    public static void main(String[] args) throws IOException {
        Scanner sc=new Scanner(System.in);
        int size=sc.nextInt();
        int a[]=new int[size];
        for (int i = 0; i < size; i++) {
            a[i]=sc.nextInt();
        }
        int Sum =0;
        for (int i = 0; i < size; i++) {
            Sum +=a[i];
        }
    System.out.print(Sum);
   
    }

}





////**********//////////////***************************////////////Alice and Bob comperison////**********//////////////***************************////////////

import java.io.*;
import java.util.*;

class Result {

    public static List<Integer> compareTriplets(List<Integer> a, List<Integer> b) {
        int alicePoints = 0;
        int bobPoints = 0;

        for (int i = 0; i < a.size(); i++) {
            if (a.get(i) > b.get(i)) {
                alicePoints++;
            } else if (a.get(i) < b.get(i)) {
                bobPoints++;
            }
        }

        List<Integer> result = new ArrayList<>();
        result.add(alicePoints);
        result.add(bobPoints);

        return result;
    }
}

public class Solution {
    public static void main(String[] args) throws IOException {
        Scanner sc = new Scanner(System.in);
        List<Integer> a = new ArrayList<>();
        List<Integer> b = new ArrayList<>();

        for (int i = 0; i < 3; i++) {
            a.add(sc.nextInt());
        }
        for (int i = 0; i < 3; i++) {
            b.add(sc.nextInt());
        }

        List<Integer> result = Result.compareTriplets(a, b);
        System.out.println(result.get(0) + " " + result.get(1));
    }
}
